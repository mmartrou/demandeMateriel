"""
Script de migration pour mettre √† jour group_count depuis quantity
pour les anciennes demandes o√π group_count est √† 1 par d√©faut
"""

from database import get_db_connection

def migrate_group_count():
    """Copier les valeurs de quantity vers group_count pour les anciennes entr√©es"""
    conn, db_type = get_db_connection()
    cursor = conn.cursor()
    
    placeholder = '%s' if db_type == 'postgresql' else '?'
    
    # Compter combien de lignes seront affect√©es
    cursor.execute('SELECT COUNT(*) FROM material_requests WHERE group_count = 1 OR group_count IS NULL')
    count_result = cursor.fetchone()
    
    if isinstance(count_result, dict):
        count = count_result['count'] if 'count' in count_result else count_result.get('COUNT(*)', 0)
    else:
        count = count_result[0] if count_result else 0
    
    print(f"üìä Nombre de demandes √† mettre √† jour: {count}")
    
    if count == 0:
        print("‚úÖ Aucune demande √† mettre √† jour.")
        conn.close()
        return
    
    # Mettre √† jour group_count = quantity pour toutes les entr√©es o√π group_count est 1 ou NULL
    cursor.execute('''
        UPDATE material_requests 
        SET group_count = quantity 
        WHERE group_count = 1 OR group_count IS NULL
    ''')
    
    conn.commit()
    rows_updated = cursor.rowcount
    
    print(f"‚úÖ Migration termin√©e : {rows_updated} demande(s) mise(s) √† jour")
    print(f"   group_count a √©t√© copi√© depuis quantity")
    
    conn.close()

if __name__ == '__main__':
    print("üîß D√©marrage de la migration group_count...")
    migrate_group_count()
    print("‚úÖ Migration termin√©e!")
